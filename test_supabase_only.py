#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Ç–æ–ª—å–∫–æ —Å Supabase
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_supabase_only():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Ç–æ–ª—å–∫–æ —Å Supabase"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Ç–æ–ª—å–∫–æ —Å Supabase...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from supabase_config import SupabaseManager
        from main import RepositoryPriorityManager, REPOS
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        priority_manager = RepositoryPriorityManager()
        print("‚úÖ RepositoryPriorityManager —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Supabase
        if not priority_manager.supabase_manager:
            print("‚ùå SupabaseManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        print("‚úÖ SupabaseManager –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∏–∑ –ë–î
        print("\nüîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        priority_manager.initialize_priorities()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤: {len(priority_manager.priorities)}")
        print(f"üóÑÔ∏è –°—Ç–∞—Ç—É—Å –ë–î: {'–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ' if priority_manager.db_synced else '–ù–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ'}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
        print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤:")
        for i, repo in enumerate(REPOS[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            priority_data = priority_manager.get_priority(repo)
            print(f"  {repo}:")
            print(f"    - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority_data['priority_score']:.3f}")
            print(f"    - –ò–Ω—Ç–µ—Ä–≤–∞–ª: {priority_data['check_interval']} –º–∏–Ω")
            print(f"    - –û–±–Ω–æ–≤–ª–µ–Ω–∏–π: {priority_data['update_count']}")
            print(f"    - –ü—Ä–æ–≤–µ—Ä–æ–∫: {priority_data['total_checks']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤:")
        stats = priority_manager.get_priority_stats()
        print(f"  - –í—Å–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: {stats['total_repos']}")
        print(f"  - –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats['high_priority']} üî¥")
        print(f"  - –°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats['medium_priority']} üü°")
        print(f"  - –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats['low_priority']} üü¢")
        print(f"  - –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ: {stats['failing_repos']} ‚ö†Ô∏è")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (–∏–∑–º–µ–Ω—è–µ–º –æ–¥–∏–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î...")
        test_repo = REPOS[0]
        original_score = priority_manager.get_priority(test_repo)['priority_score']
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–º–µ–Ω—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        priority_manager.priorities[test_repo]['priority_score'] = 0.999
        priority_manager.priorities[test_repo]['update_count'] += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        priority_manager._save_priorities_to_db()
        print(f"‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç {test_repo} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        priority_manager.priorities[test_repo]['priority_score'] = original_score
        priority_manager.priorities[test_repo]['update_count'] -= 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        priority_manager._save_priorities_to_db()
        print(f"‚úÖ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç {test_repo} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("\n‚úÖ –¢–µ—Å—Ç Supabase-only —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(test_supabase_only())
