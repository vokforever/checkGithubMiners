#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_basic_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("=== –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===")
    
    try:
        from modern_telegram_formatter import convert_markdown_to_telegram
        
        # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        test_text = """
# –ó–∞–≥–æ–ª–æ–≤–æ–∫
**–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –∏ *–∫—É—Ä—Å–∏–≤*
`–∫–æ–¥` –∏ ~~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π~~
||—Å–ø–æ–π–ª–µ—Ä||
"""
        
        print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        print(test_text)
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
        formatted_text, parse_mode = convert_markdown_to_telegram(test_text, "auto")
        print(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç ({parse_mode}):")
        print(formatted_text)
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º HTML —Ñ–æ—Ä–º–∞—Ç
        formatted_text, parse_mode = convert_markdown_to_telegram(test_text, "html")
        print(f"HTML —Ñ–æ—Ä–º–∞—Ç ({parse_mode}):")
        print(formatted_text)
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º MarkdownV2 —Ñ–æ—Ä–º–∞—Ç
        formatted_text, parse_mode = convert_markdown_to_telegram(test_text, "markdown_v2")
        print(f"MarkdownV2 —Ñ–æ—Ä–º–∞—Ç ({parse_mode}):")
        print(formatted_text)
        print()
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_text_cleaning():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç–∞"""
    print("=== –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ ===")
    
    try:
        from modern_telegram_formatter import clean_text_for_telegram_modern
        
        # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å HTML –∏ Markdown
        test_text = """
<div>HTML —Ç–µ–≥</div>
**Markdown —Ç–µ–∫—Å—Ç**
[–°—Å—ã–ª–∫–∞](http://example.com)
{–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ}
<!-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π -->
"""
        
        print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        print(test_text)
        print()
        
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç
        cleaned_text = clean_text_for_telegram_modern(test_text)
        print("–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        print(cleaned_text)
        print()
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_complex_markdown():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–∂–Ω–æ–µ Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("=== –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ Markdown ===")
    
    try:
        from modern_telegram_formatter import convert_markdown_to_telegram
        
        # –°–ª–æ–∂–Ω—ã–π Markdown —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ –∫–æ–¥–æ–≤—ã–º–∏ –±–ª–æ–∫–∞–º–∏
        test_text = """
| –ö–æ–ª–æ–Ω–∫–∞ 1 | –ö–æ–ª–æ–Ω–∫–∞ 2 | –ö–æ–ª–æ–Ω–∫–∞ 3 |
|------------|------------|------------|
| –î–∞–Ω–Ω—ã–µ 1   | –î–∞–Ω–Ω—ã–µ 2   | –î–∞–Ω–Ω—ã–µ 3   |

```python
def hello_world():
    print("Hello, World!")
```

**> –†–∞—Å—à–∏—Ä—è–µ–º–∞—è —Ü–∏—Ç–∞—Ç–∞

> –≠—Ç–æ –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–æ–∂–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å
"""
        
        print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        print(test_text)
        print()
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
        formatted_text, parse_mode = convert_markdown_to_telegram(test_text, "auto")
        print(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç ({parse_mode}):")
        print(formatted_text)
        print()
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_library_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫ ===")
    
    try:
        from modern_telegram_formatter import TELEGRAMIFY_AVAILABLE
        
        print(f"telegramify-markdown: {'–¥–æ—Å—Ç—É–ø–µ–Ω' if TELEGRAMIFY_AVAILABLE else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        if TELEGRAMIFY_AVAILABLE:
            print("‚úì –û—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ö† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback —Ä–µ–∂–∏–º")
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞ –¥–ª—è Telegram")
    print("=" * 50)
    print()
    
    tests = [
        test_library_availability,
        test_basic_formatting,
        test_text_cleaning,
        test_complex_markdown
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
                print("‚úì –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω")
            else:
                print("‚úó –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        
        print()
    
    print("=" * 50)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö† –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    main()
