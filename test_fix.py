#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import asyncio
import sys
import os
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from main import RepositoryPriorityManager, REPOS, check_single_repo
        from aiogram import Bot
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        priority_manager = RepositoryPriorityManager()
        print("‚úÖ RepositoryPriorityManager —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Supabase
        if not priority_manager.supabase_manager:
            print("‚ùå SupabaseManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        print("‚úÖ SupabaseManager –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
        print("\nüîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤...")
        priority_manager.initialize_priorities()
        print(f"‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(priority_manager.priorities)} —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ
        print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ...")
        test_repo = REPOS[0]
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        priority_manager.record_check(test_repo, success=True, response_time=1.5)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –¥–ª—è {test_repo}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–µ—É–¥–∞—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        priority_manager.record_check(test_repo, success=False, response_time=0.0)
        print(f"‚úÖ –ù–µ—É–¥–∞—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –¥–ª—è {test_repo}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        priority_manager.record_update(test_repo)
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –¥–ª—è {test_repo}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
        priority_data = priority_manager.get_priority(test_repo)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è {test_repo}: {priority_data['priority_score']}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å SupabaseManager —Ä–µ—à–µ–Ω–∞!")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(test_fix())