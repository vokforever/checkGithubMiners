#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –≤ Supabase
"""

import os
from dotenv import load_dotenv

def create_tables():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ Supabase...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    try:
        from supabase_config import SupabaseManager
        supabase = SupabaseManager()
        print("‚úÖ SupabaseManager —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        create_table_sql = """
        CREATE TABLE IF NOT EXISTS checkgithub_repository_priorities (
            id SERIAL PRIMARY KEY,
            repo_name VARCHAR(255) UNIQUE NOT NULL,
            display_name VARCHAR(255) NOT NULL,
            update_count INTEGER DEFAULT 0,
            last_update TIMESTAMPTZ,
            check_interval INTEGER DEFAULT 1440,
            priority_score DECIMAL(5,3) DEFAULT 0.0,
            last_check TIMESTAMPTZ DEFAULT NOW(),
            consecutive_failures INTEGER DEFAULT 0,
            total_checks INTEGER DEFAULT 0,
            average_response_time DECIMAL(10,6) DEFAULT 0.0,
            priority_level VARCHAR(20) DEFAULT 'low',
            priority_color VARCHAR(10) DEFAULT 'üü¢',
            created_at TIMESTAMPTZ DEFAULT NOW(),
            updated_at TIMESTAMPTZ DEFAULT NOW()
        );
        """
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ SQL
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL –Ω–∞–ø—Ä—è–º—É—é
            result = supabase.client.rpc('exec_sql', {'sql': create_table_sql}).execute()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ RPC")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ RPC: {e}")
            
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —á–µ—Ä–µ–∑ insert —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
                test_result = supabase.client.table('checkgithub_repository_priorities').select('count').limit(1).execute()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            except Exception as table_error:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {table_error}")
                print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard")
                return False
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        try:
            index_sql = """
            CREATE INDEX IF NOT EXISTS idx_checkgithub_repo_name ON checkgithub_repository_priorities(repo_name);
            CREATE INDEX IF NOT EXISTS idx_checkgithub_priority_score ON checkgithub_repository_priorities(priority_score);
            CREATE INDEX IF NOT EXISTS idx_checkgithub_last_check ON checkgithub_repository_priorities(last_check);
            CREATE INDEX IF NOT EXISTS idx_checkgithub_priority_level ON checkgithub_repository_priorities(priority_level);
            """
            
            supabase.client.rpc('exec_sql', {'sql': index_sql}).execute()
            print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å—ã: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        try:
            result = supabase.client.table('checkgithub_repository_priorities').select('*').execute()
            if result.data:
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(result.data)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –ø—É—Å—Ç–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        
        supabase.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def migrate_data():
    """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –≤ Supabase"""
    print("\nüîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON...")
    
    try:
        from supabase_config import SupabaseManager
        supabase = SupabaseManager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª JSON
        if os.path.exists('repo_priority.json'):
            print("‚úÖ –§–∞–π–ª repo_priority.json –Ω–∞–π–¥–µ–Ω")
            
            # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            success = supabase.migrate_from_json('repo_priority.json')
            if success:
                print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        else:
            print("‚ö†Ô∏è  –§–∞–π–ª repo_priority.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        supabase.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ GitHub Miners Bot - Supabase Table Creator")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if create_tables():
        print("\n‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        migrate_data()
        
        print("\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase Dashboard")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
        print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /sync –≤ Telegram")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard")

if __name__ == "__main__":
    main()
